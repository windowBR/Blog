{"meta":{"title":"windowBR的博客","subtitle":"","description":"","author":"windowBR","url":"http://blog.windowbr.top","root":"/"},"pages":[{"title":"友链","date":"2022-12-24T03:44:47.271Z","updated":"2022-12-24T03:44:47.271Z","comments":true,"path":"PY.html","permalink":"http://blog.windowbr.top/PY.html","excerpt":"","text":"我的朋友们"},{"title":"文章归档","date":"2022-10-10T11:45:49.583Z","updated":"2022-10-10T11:35:38.734Z","comments":true,"path":"archive.html","permalink":"http://blog.windowbr.top/archive.html","excerpt":"","text":""},{"title":"关于","date":"2022-10-10T12:17:43.000Z","updated":"2024-05-31T14:13:10.484Z","comments":true,"path":"about.html","permalink":"http://blog.windowbr.top/about.html","excerpt":"","text":"关于我普普通通男大学生。 关于本站2024 5-13 使用 Gitalk 为博客添加了评论区 2023 1-14 使用 hexo-bilibili-bangumi 插件为博客添加了追番列表功能，数据源为 Bangumi（番组计划） 2022 10-10 将 Hexo 与 Nexmoe 初步配置完毕，博客初步搭建完成 10-09 为博客安装 Nexmoe 主题 10-08 使用 Hexo 开始搭建博客，使用腾讯云 COS 作为图床"},{"title":"谢谢打钱","date":"2022-10-10T12:18:22.000Z","updated":"2023-01-11T17:02:53.229Z","comments":true,"path":"donate.html","permalink":"http://blog.windowbr.top/donate.html","excerpt":"","text":"啊但是反正没人会给我赞助，这页面就先随他放在这吧（"}],"posts":[{"title":"使用 Gitalk 搭建评论区","slug":"Gitalk","date":"2024-05-31T11:30:06.000Z","updated":"2024-05-31T14:14:01.834Z","comments":true,"path":"2024/05/31/Gitalk/","link":"","permalink":"http://blog.windowbr.top/2024/05/31/Gitalk/","excerpt":"","text":"前言我这博客也是建立了许久，但始终没有任何的反馈还是令我没有一点更新的动力，因此我决定要为我的博客添加一个评论区！ 经过一番挑选，最终决定使用 Gitalk 来进行评论区的搭建 至于为什么选择 Gitalk，理由也相当简单，仅仅因为我看其他很多人使用的是 Gitalk（ 以下为基于 Hexo 与 Nexmoe 进行的教程，如果您使用的是其他博客系统或主题，也可以参阅本文作为参考 操作1. 创建一个 Github OAuth Apps进入 Github 点击右上角头像，【Settings】-&gt;【Developer settings】-&gt;【OAuth Apps】-&gt;【New OAuth App】 创建完成后，你应当获得 Client ID 和 Client secrets 并将其记录 2. 博客相关配置我所使用的博客主题 Nexmoe 中提供了**插槽**功能，以下 Gitalk 的安装与配置也基于此功能进行 找到博客根目录下的 _config.nexmoe.yml 文件并找到以下设置项进行以如下修改，将【】内的内容根据自己情况进行更改（修改后不含【】） 123456789101112131415161718slotHead: | &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css&quot;&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js&quot;&gt;&lt;/script&gt; slotComment: | &lt;div id=&quot;gitalk-container&quot;&gt;&lt;/div&gt; &lt;script type=&quot;text/javascript&quot;&gt; var gitalk = new Gitalk(&#123; clientID: &#x27;【由上一步获取】&#x27;, clientSecret: &#x27;【由上一步获取】&#x27;, repo: &#x27;【GitHub仓库名】&#x27;, owner: &#x27;【GitHub用户名】&#x27;, admin: [&#x27;【GitHub用户名】&#x27;], id: location.pathname, // Ensure uniqueness and length less than 50 distractionFreeMode: false // Facebook-like distraction free mode &#125;) gitalk.render(&#x27;gitalk-container&#x27;) &lt;/script&gt; 以下为示例 123456789101112131415161718slotHead: | &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css&quot;&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js&quot;&gt;&lt;/script&gt; slotComment: | &lt;div id=&quot;gitalk-container&quot;&gt;&lt;/div&gt; &lt;script type=&quot;text/javascript&quot;&gt; var gitalk = new Gitalk(&#123; clientID: &#x27;手动打码&#x27;, clientSecret: &#x27;手动打码&#x27;, repo: &#x27;Blog&#x27;, owner: &#x27;windowBR&#x27;, admin: [&#x27;windowBR&#x27;], id: location.pathname, // Ensure uniqueness and length less than 50 distractionFreeMode: false // Facebook-like distraction free mode &#125;) gitalk.render(&#x27;gitalk-container&#x27;) &lt;/script&gt; 重新生成博客内容，然后打开博客文章，在评论区登录你的 GitHub 账号后会自动进行初始化，初始化完成后你应当看到类似如下样式代表评论区搭建完成： 每一篇文章都需要单独初始化，或者你也可以自己写一个初始化脚本来进行 3. 我不是 Hexo 或 Nexmoe 的用户，我应该怎么办使用任何合适的方式在你的文章页面中插入以下 HTML 标签（两种方案任选其一，推荐放在 &lt;head&gt;&lt;head/&gt; 标签中） 1234567&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css&quot;&gt;&lt;script src=&quot;https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js&quot;&gt;&lt;/script&gt;&lt;!-- or --&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/gitalk/dist/gitalk.css&quot;&gt;&lt;script src=&quot;https://unpkg.com/gitalk/dist/gitalk.min.js&quot;&gt;&lt;/script&gt; 然后在你希望插入评论区的地方插入以下 HTML 标签 12345678910111213&lt;div id=&quot;gitalk-container&quot;&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot;&gt; var gitalk = new Gitalk(&#123; clientID: &#x27;手动打码&#x27;, clientSecret: &#x27;手动打码&#x27;, repo: &#x27;Blog&#x27;, owner: &#x27;windowBR&#x27;, admin: [&#x27;windowBR&#x27;], id: location.pathname, // Ensure uniqueness and length less than 50 distractionFreeMode: false // Facebook-like distraction free mode &#125;) gitalk.render(&#x27;gitalk-container&#x27;)&lt;/script&gt; 再按照上方说明初始化评论区后搭建完成","categories":[{"name":"技术","slug":"技术","permalink":"http://blog.windowbr.top/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Blog","slug":"Blog","permalink":"http://blog.windowbr.top/tags/Blog/"}]},{"title":"因果交流之刻——《樱之刻》有感","slug":"sakuranotoki","date":"2023-07-30T18:20:00.000Z","updated":"2023-07-30T18:20:14.479Z","comments":true,"path":"2023/07/31/sakuranotoki/","link":"","permalink":"http://blog.windowbr.top/2023/07/31/sakuranotoki/","excerpt":"","text":"最近也是凭借着 GPT-4 翻译的出现和本人一点点羸弱的日语基础终于把一直心心念念的《樱之刻》给好好推完了，先说一下总体感受吧：虽然在中途的剧情中出现了些许的不足，但并不影响它成为一部相当成功的作品，成功续写了《樱之诗》的传奇。 Chapter 1 La gazza ladra 贼雀这一章详细讲了在《诗》中真琴线提到的喜鹊花瓶的故事，前两章更多的是补充背景，为后续的展开做了不少铺垫。 真品与赝品 中村丽华：我就是在真品的环境中长大的，正因如此，我知道什么是真品和赝品，杰出之作和平庸之作。 她如此坚信着，而事实也确实如此。鸟谷静流为了修复与丽华的关系，凭借着当年纱希用来欺骗草薙健一郎的画作以及资料，加上自己不断磨练的高超的陶艺水平制作出了赝品 的喜鹊花瓶，同时也留下了能作为赝品 证明的碧绯。然而当静流将花瓶真正拿到丽华面前时却动摇了：拥有辨别真伪之眼的丽华看到花瓶后不但没有一眼认出这是伪造品，反而十分开心的一口咬定这是真品，然而静流却良心过意不去收回了喜鹊花瓶。 当初刚玩第一章的时候我内心想的是丽华所谓的辨别真伪的能力也不过如此，回过头来看当时自己还是太嫩了啊。丽华毫无疑问是知道这个喜鹊花瓶并非莫奈《喜鹊》的姊妹作，但此时的丽华已经不是曾经那个学院大小姐，失去了曾经荣光的她在众人的眼中只是一个滑稽的小丑。在这种时刻为了修复好友关系而费尽心思的静流制作出来的喜鹊花瓶于丽华而言就是真正的真物。 丽华：因为，这个花瓶寄宿了纯粹的爱。 拥有着自己的骄傲以及想要让静流为世人所知的她并没有简单的表达出自己的情感，因此当静流选择了反悔并收回花瓶时，丽华选择了决裂。 Chapter 2 картинки с выставки 展览会之画时间线回到现在，弓张美术部重新出现活力，所有人也依照着，美术部的“惯例”进行着新生招募和 FIRST 展的准备工作。 道路 草薙直哉： 「在学生时代，我作为弓张的学生，看着这个美术部。而现在，我作为一名教师，看着这个美术部。」 「两个交叉的视点。看起来相同，但完全不同的东西……。然而，它们有时会重叠在一起。」 「回忆和现在。差异与重复。尽管这两者不同，但它们表现出完全相同的姿态。」 第二章被“平淡”的教师日常充满，仿佛在告诉玩家：现在的草薙直哉并不是一个优秀的艺术家，而是一名优秀的教师。 整整一章的篇幅在描绘这美好而惬意的日常生活，不禁也令我感慨这样平淡的生活真是美好，无所谓功名利禄，也无所谓勾心斗角，守护好充满希望的美术部并见证他们的成长又何乐而不为呢。 但直哉内心中却仍然放不下那已故的友人，将他的影子映射到了生活的些许角落，时刻敦促着他向着更高点前进；同时其他人们也在他的周围前进着：相比之前多了一分稳重的长山香奈、新生代美术部的大家、成为了社畜但依然会叫草薙喝酒的片贝、成为了家人一般的蓝……所有人都在变化着、前进着，而作为教师的草薙的时间似乎却停留在了圭死去的那一天。 草薙直哉： 「我们在画前伫立，就这样在那家伙的画前伫立着。之前自己一直在画前止步不前」 「总觉得像现在这样，和大家一起站在画前，又可以朝前迈进了。」 「不对，到如今这样，也并非一直停滞不前。」 「圭，我要先行一步了。」 ——于是，草薙直哉下定了决心，真正的讲述《樱之刻》故事的篇幅才刚刚开始。 Chapter 3 Night on Bald Mountain 荒山之夜天才与才能 夏目圭：「平凡的天才展现才能，真正的天才让人忘记才能」 在这一章中我认为恩田宁这个角色是很值得说一下的，「平凡的天才展现才能，真正的天才让人忘记才能」 这句话贯穿了从《诗》到《刻》的各个角落。在《诗》中更多的展现了“真正的天才”这个概念，但在《刻》中将“平凡的天才”这个概念也详细的有了说明，而恩田宁就是这么一个角色。天生拥有着四色觉并且能将这种能力很好的融入自己的绘画中的宁毫无疑问是一个天才，然而她过度依赖这种能力，不停地在自己的“才能”上下功夫、努力的练习，在自己的才能上登峰造极，从而就导致了她更加不能发现到艺术的本质：打动人心的作品才是好的作品。 在恩田的画中，我们可以看到「才能」的影子。 但是在本间的画中，没有那种能轻易看到的才能。 存在的只有，犀利且深邃的「真理」。 在与心铃的对决中更加体现了这点：心铃的才能无疑是顶尖的，但他人看见了心铃的画会被她的画所打动，将现场发生的种种场景、事件、甚至是内心，展现在一副小小的画布上，这带给人的心灵的冲击无疑是巨大的，即使画作拥有着绝对强大的才能，但不会有人去在乎她使用的手法或是技巧，包括宁自己也被这幅画所激怒，然后自认不如，更加证明了它是如何的打动人心。相比之下宁的画作则是另一种现象：深邃而神秘的天空，仿佛无法窥见真实的色彩，颇有一种甲方爸爸喜欢的“五彩斑斓的黑”的感觉，这样的画作首先会让人思考它是如何做到的，而不是首先让心灵被打动。 而其他真正的天才也各自拥有绝对的才能，但当草薙健一郎的奥林匹亚激怒中村时、草薙直哉在公园里绘出的樱花给里奈留下震撼时、鸟谷静流的花瓶出现在丽华面前时，没有人首先去注意到他们的技巧，而是首先感受到了内心的一分波澜。 “凡人” 乃乃末：「并不只有拥有才能的画家才能打动人心，凡人的作品也有令人感动的可能」 如果说恩田宁作为“平凡的天才”的代表在第三章中出现，那么长山香奈则是作为“凡人”的代表贯穿了整一作。 直哉、香奈与乃乃末在居酒屋相遇，长山香奈与天才们有着几乎不可跨越的鸿沟般的差距，所有专业的评论家都没有给她较高的评价，但在居酒屋中，香奈第一次知道原来自己还有像乃乃末这样真心喜欢着她的粉丝。香奈虽然没有天才们一般的才能，但她却有着对艺术绝对的执着与纯真，她将这样的感情融入到了自己的绘画当中，虽然更多人将她视为践踏艺术的跳梁小丑，但这份真一定也是能收获到真正的粉丝的吧。 乃乃末：「我不清楚那些大人物会怎么评价……但我很喜欢长山老师的画」 ——于是，草薙直哉想起了年轻时的香奈对自己说过的话： 长山香奈： 「有能分辨真伪的眼睛，在这个世界上只会带来痛苦。」 「像其他的家伙们一样，对那些烂东西欢呼雀跃，会变得更加幸福」 「这个世界上的家伙们。都看起来很幸福不是吗。你知道为什么吗？因为他们分辨不出真伪」 「他们所知道的，就只有大部分人是否欢喜。只有读懂气氛的能力」 「但是，那是正确的。那些家伙比我要优秀得多。他们能更幸福地生活」 「但即便如此，我也不能向那些生产无价值物品的人屈服」 「所以，我会去战斗」 这，便是长山香奈作为凡人去战斗的理由。 当今现实社会何尝不是如此，大多数人的判断都很大程度的被资本、社会、环境所裹挟，人们无法辨别出何为真、何为伪；何为美、何为丑，他们只是在顺应着大众的主流与发泄着自己的情绪。香奈是凡人的代表，但她却无法认同这种因为大家不在意真伪就不需要需求真正的美的现象，她要向世人证明，即使是凡人也能有能力辨别真伪美丑，也有能力创造出真正的美，也能有能力与天才们同台抗衡。为此，她不断地战斗着。 艺术与话语 草薙健一郎： 「无用的闲聊会使身体变得浑浊」 「浑浊的身体只能产生烟雾般的话语……」 「但是，艺术不需要无用的闲聊」 「只有经过磨砺的意义才会浮现出来」 依然是贯穿全文的一段话，但意义比较明显，个人认为游玩游戏后应该大伙都懂 Sca-自 想传达给玩家什么，就不做过多解释仅仅引用一下了。 Der Dichter spricht 诗人说 本间心铃：「在发现虚无之后，我找到了美」 维特根斯坦说过：“所谓的天才就是拥有勇气的才能。”（当然如果不是因为樱之刻本身就提到了我肯定也不知道） 拥有着凝视深渊一般的眼神的本间心铃便是如此。即使面对着兄长的欺凌、母亲的畏惧等童年背负的经历，她也没有被这一切所击垮。相应的，她发现了虚无，将自己从世界中分离开来，用真理的眼睛从第三方观察着这个世界，得到了令人恐惧的洞察力，再然后，被她的师父——夏目圭所发现。发现了虚无的她已经从世界抽离，仿佛一个迷路的孩子一般，是圭发现了她，并教给了她什么是美，这对心铃而言无疑是最大的救赎吧。 虚无带给了她创造美的能力，而圭找到她并为她带来了美。 Kibou 幾望&#x2F;既望&#x2F;希望艺术与批评 中村丽华： 「新的美需要新的词汇」 「作为路易斯·勒罗伊还是泰奥多尔‧迪雷我不清楚……但我仍然是为你新产生的美给予批评的人」 丽华一直如此固执的原因玩家终于在真琴线找到了答案。鸟谷静流的陶艺便是新的美，艺术与批评从来都是相辅相成密不可分的。正如印象派的闻名正是由于两位批评家的冲突一般，丽华希望自己能作为静流的新的美的批评者。正因为自己知道这些作品是“真物”，所以才应该让世人认识到作品的价值，为此不惜成为小丑一般的角色也要努力制造冲突，让更多的人能够注意到静流的作品。 这也正是文艺作品的一个共性吧，一个作品即使再过优秀，若没有批评家将其发掘，也将难以在大众视野中出现。我写的这篇文章也同样如此，即使我无法与专业的批评家一般专业，但我也希望自己能作为“凡人”来发现美，来参与到给 Galgame 这种新的艺术载体带来批评的一部分中去。 一点小吐槽想吐槽一下这里明明是真琴线但是个人感觉除了 H 以外，重点似乎并不在真琴身上呢。然后这条线的 H 嘛。。。多少是有些突兀了，自哥哥写恋爱的水平还是相当有待提升啊（ Chapter 4 Mon panache! 我的羽饰抛弃了一切的画家 恩田放哉：「这幅画如同用血绘成的一般。太棒了，真的太棒了」 整整一章都用来讲述了圭在《诗》的时间线之前所经历的一切，游玩这章后感觉用“抛弃了一切的画家”这个词来形容他再合适不过了。 圭是天才吗？毫无疑问是的。那天才能够轻易地登上世界的顶峰吗？恐怕不能。圭在见到了草薙父子的画后差点被这对父子的画所击垮：那是何等巨大的差距！圭从心底这么觉得。为了能追上草薙直哉他放弃掉了一切，真正意义上的废寝忘食，用生命在绘画，只为了能与草薙直哉一同成为在世界顶峰决战的对手。 当然如果只是单纯地像一些成绩差得要死还找不到正确的学习方法的人一样只知道傻傻努力是无法达到这般水平的，具体请往下看。 草薙直哉：「所以，即使每天有10个小时的练习量，对于凡人来说，那可能只有1小时的价值，对于天才来说，可能有100小时的价值」 在圭与直哉的对话中，直哉教会了他何为时间的密度，不同的集中力对于同样的时间获得的效果是截然不同的，虽说这是从小老师就会反复向大家提到的似乎显而易见的事情，但真正能做到的人并不多。如何调整你的精神、你是否真心地想要练习&#x2F;学习某种事物、你是否能做到高度的集中……诸多的因素影响着这一切，天才之所以为天才，正是他们拥有更高的时间的密度。 草薙健一郎： 「圭，肉体并不是精神的奴隶」 「反过来也一样，精神不是肉体的奴隶」 「画作是由精神描绘的。这是正确的」 「但同时，画作也是由肉体描绘的。这也是事实」 那么保持精神绝对的高度集中，近乎最大化的时间的密度，然后忽略掉其余的一切通过消耗生命来努力是否可行呢？答案依旧是不行。当健一郎将圭领到夏目宅时，圭的身体已经虚弱得像是随时有可能死去，他认为身体只会拖累自己的精神阻碍他的作画。但健一郎用事实告诉了他身体也同样重要：在同一块画板上进行的绘画对决向圭证明了这一点。 关于这点倒是正如中国的那句古话而言：身体是革命的本钱。即使是绘画这种看似只需要精神的行为对身体的要求也是非常大的（如果你用草薙父子那种逆天画法就能明显感受到）。身体与精神并不应该是相互拖累的关系，而应该是相辅相成，更好的身体才能作为更高精神的载体；而更高的精神才能将更好的身体发挥得淋漓尽致。 Chapter 5 D’où venons-nous? Que sommes-nous? Où allons-nous 《我们从何处来？我们是谁？我们向何处去？》来到了全作的高潮部分，即第五章。写到这里果然还是得休息一下，主要是第五章的很多表述对我而言还是有点抽象，属于是我能感觉到什么但好像又没法把它表述出来；还有一点就是第五章很多重点是对于许多前面因果交流 的一个收束，难以单独抽取出几个小标题做文章但我这篇又刚好写成了这样的格式，所以我个人认为关于这章的评论&#x2F;解析（我也不知道这里该叫评论还是解析）可能写得会不够好、不够全面，甚至说会有种没有写到重点上的感觉（是的关于这点自己深有自觉），但是吧，水平有限只能写成这样了。 所爱者死去之时，我必须得自杀。所爱者死去之时，除此以外，别无他法。 可即便如此，如若罪业深重，仍要长久地活命的话， 应当怀有，侍奉之心。应当怀有，侍奉之心。 因为所爱者，是死去了，因为他确实，是死去了， 因为早已经，无任何法可想，为了那个人，为了那个人， 必须怀有，侍奉之心。必须怀有，侍奉之心。 ——《春日狂想》中原中也 这是水菜喜欢的诗，直哉也深受这首诗影响着，仍要长久地活命，怀有侍奉之心。 快乐王子 《快乐王子》为了不幸的人们，给予了各种东西 他给出了自己装饰自身的一切，于是他失去了一切 但是，只有燕子始终没有离开王子的雕像 即使寒冬来临，燕子仍然陪伴着王子 然后，燕子死去了…… 上面的引用是出自第五章直哉和宁在公园里的对话，因为对话感觉怎么引用都怪怪的就直接省略说话人了。 《快乐王子》这个故事一直都是从《诗》到《刻》的中心，草薙直哉就是那个快乐王子，而他身边的大家既是被他帮助的不幸的人们，也是一直陪伴着王子的燕子。《快乐王子》故事的最后王子的铅心裂开了，燕子也死去了，但在《刻》中，众人一直在努力着，努力着让王子的心能够重新燃起。 冰川里奈： 「把王子的心脏送给燕子并不只是你一个人能做到的」 「王子的心脏。将那颗心再次燃起的，是我」 （为什么单单引用里奈的话是因为只找到里奈这么宣言过） 这里便是再一次点明了一个主题：怀有侍奉之心。直哉与小时候出现了较大的变化，最大的变化则是出现在了水菜和圭死去的时候，他被《春日狂想》影响着，怀着侍奉之心生活着。在第一次“快乐王子”的心暗淡的时候，是圭一直将其视为对手努力着把直哉的心重燃，当王子的心第二次暗淡时，所有被快乐王子帮助过的人都成为了令王子的心重燃的一部分。 人啊，怀着侍奉之心生活下去吧！ 美好的每一天 川内野优美： 「小幸福，恰恰是那种随处可见，在日常生活中埋藏着的」 「如果能在那里发现快乐，人们就能过得出奇的快活」 「这样的小幸福，是大幸福无法填补的」 为什么这部分的小标题这么取呢？因为这部分的观点不觉得和素晴日（美好的每一天）真是太像了吗（（（ 如果你还没有听说过或者没有玩过素晴日，那对于这个观点的解释我们的自哥哥在这部作品中展开得更加详细，赶快去了解一下吧！ 当然，即使你没有去了解也不打算去了解一下，那也请珍惜生活中的小幸福，过上“美好的每一天”。 画的价值在于故事 草薙直哉： 「有人说，画的价值不在于画本身，而是在于画家的人生故事」 「如果是被他人编造的“画家的故事”所感动，那可能确实不能算是被画本身感动」 「但如果通过画，感受到画家的生活，由此产生共鸣，我觉得这比仅仅被画本身的美感动要更美好」 “画的价值在于故事”，初次看到这句话时第一想到的是有些不可理喻，会想这是什么资本家为了赚钱的营销手段，但是在这里才读出了这句话的另一层含义。 艺术何以感动人心？或者说何以取悦人的灵魂？直哉给出了这样的看法。如果绘画需要取悦人的灵魂，那画必须要拥有“灵魂的重量”，画家，或者说所有的艺术家，他们需要将自己的身心投入到作品中，不需要刻意地在作品中描绘自己的故事，而是自然而然的作品就会与艺术家的灵魂相融合。这样欣赏艺术的人便会与作品产生共鸣，我认为这就是 sca-自一直想要强调的优秀的作品取悦人的灵魂的含义吧。 “凡人” 长山香奈： 「天才无法触动凡人的心」 「正因为我的笔是凡人的笔，所以我能打动大众的心」 「天才往往会忽视凡人的本质」 「天才的死敌，永远是我们这些凡人！」 这里同样也是以长山香奈为中心来叙述天才与凡人关系的部分，不过个人认为香奈打败里奈的这部分作品里的描写是欠佳的，当然既有可能是自哥哥这里真写飘了，也有可能是代入了美的批评家的思维而不太能接受这样的结果吧。但不论如何，就观点本身而言还是值得我们讨论一下的。 与这次绘画比赛类似的现象我想在大家身边是不少的：美术、音乐、绘画、游戏、动画等等，许多的作品已经被时间所证明了它的艺术性与卓越。但如果将目光放到大众中去，这类优秀的作品反而难以成为大众的主流被接受，正因为它们虽然优秀，但更多的凡人是无法体会到这分优秀的，也就是“天才无法触动凡人的心”。那么，那要怎样才能触动凡人的心呢？ 弗里德曼： 「被选中的人群过于专注于新奇性和艺术性」 「然而，除此之外的大部分人，即大众，他们追求的是重复的平庸，仅仅是表面的新奇」 「重复的表面新奇，也就是约定好的感动」 虽然这样的事实使对艺术性有追求的人非常不乐意，但现实中的现象便是如此。试着想一想，许许多多的网红作品是否具有足够的深度？我想所有人心里的答案应该都是大多数的网红作品只停留在了最简单的表层，将“约定好的感动”呈现到观众面前，正是这么做才能使作品能够被数量更多的凡人所接受。 然而，如果作品仅仅为了这些赚凡人的钱而抛弃了作为作品所应有的艺术性，那它一定只会像各种网红产品一样如过眼云烟那般无力。但长山香奈在这点却不一样，正如我在第三章的关于“凡人”的解析中提到，香奈是作为凡人在战斗，但同时她作为真正的艺术家在追赶天才们，整体而言她在创造的是希望能够雅俗共赏的作品。因为自己是凡人，所以能理解凡人在艺术上无法超越天才们，但同时也要作为凡人创造自己的艺术，我想作品希望表达的正是这样一个不同于高雅艺术的艺术存在形式吧，既不像高雅艺术那般疏远，也不脱离凡人的范畴，同时也没有失去艺术的崇高，那么创造出来的便会是雅俗共赏的艺术作品，我在评论的这部《樱之刻》不正是这样的作品吗？ 关于 GPT-4 翻译最后讲一下目前 GPT-4 翻译的评价吧，先说明一下使用的是 Sakuranotoki-Chinese 这个项目在 2023&#x2F;6&#x2F;10 下载的版本，本文发布时我再去看本项目已经优化了不少，以下仅以我玩的版本来评价。本人游玩下来的感觉是约 90% 的文本是没有问题的，但是有问题的那 10% 也相当致命，这里简单说几个点： 人名翻译错误日语人名的翻译基本遵循名字中有汉字以汉字为准，有假名则由译者根据假名发音补充出对应的合适的日语中存在的汉字，亦或者取中文谐音（此方法用得较少但合适的时候也会采用），但是往往一个人名的假名可以补充为相当多种不同的组合，那么 AI 翻译就会出现人名为假名时一个人的名字千变万化的情况。 主语错乱众所周知日语中省略主语的情况是相当多的，但是中文这种情况很少见，那么将日语翻译为中文不可避免的就是需要联系上下文补充出合适的主语使翻译文本符合中文直觉，但是当由目前尚不成熟的 AI 来翻译就会出现经常补充错误的情况，简单来说就是很多地方男性角色会补个“她”作为主语这样的主语性别错乱。 对话错乱简单来说就是人说的是一句话，但字幕显示的是上一句&#x2F;下一句或几句这样的错乱，并且一旦出现就会一大段都这样。 当然在写本文的时候又去项目主页看了眼，能看出项目作者有在一直维护更新优化它，现在的版本应该会效果好不少了，希望 AI 翻译以后能更好的帮助到翻译工作，让我们更容易更快的玩到优质的汉化作品吧，我对这里的前景还是挺看好的。 后记&#x2F;碎碎念 啊终于把这篇评论写完了，前前后后还拖了挺久的（看我上面提到的下载汉化文本的日期和这篇文章发布日期差这么远就能看出来），主要原因倒其实不是因为无从下笔、写不动之类的（虽然确实也有一点这个原因），其实更多的单纯因为我比较懒，具体表现为写了两段：“啊有点累了，休息几天再来写吧。”然后就成功的拖了这么久。 个人感觉写得好肯定是算不上了，有不少地方其实是总感觉能展开许多但是写出来却只能憋出几行字，只能说文学功底还是太差了吧。 本来打算在第五章还加一个小标题用来阐述为什么蓝理应成为最后的赢家，但想了想好像脑子里全是私货之类的如果一下抖出来怪羞耻的就还是算了。但是这不影响我在后记这小小表达一下是吧，我们的蓝姐姐，长得可爱，给人安全感，自始至终陪伴着自己，温柔而包容性强，即使不懂艺术但也能理解、陪伴直哉，这不当真女主天理难容好吧！然后还有就是我也很喜欢的真琴怎么在刻里被写成这样了，扶她自你罪大恶极！ 至于《樱之刻》这整部作品嘛，我觉得缺点还是有不少的，比如宁暴怒那直哉不管宁反而跑出去和心铃悠闲地和猫猫玩啊，真琴线压根没多少感情铺垫基本靠色色塞满，第五章最高潮的地方感觉没什么实际的东西给我种空虚感之类的。但好就好在它总的来说是瑕不掩瑜的，作为《樱之诗》的续作我认为还是相对成功的，最后想说的就是： 我什么时候才能玩到樱之响！！！","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.windowbr.top/categories/%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"Galgame","slug":"Galgame","permalink":"http://blog.windowbr.top/tags/Galgame/"}]},{"title":"反抗，自由，与存在——《茸雪》《梦末》《昙花》有感","slug":"workshop-short-3","date":"2023-01-11T16:59:10.000Z","updated":"2023-07-25T18:42:35.133Z","comments":true,"path":"2023/01/12/workshop-short-3/","link":"","permalink":"http://blog.windowbr.top/2023/01/12/workshop-short-3/","excerpt":"","text":"最近刚刚把橘子班的炒饭三部曲推完 众所周知三部曲有四部，但我并没有推第 0 部《余香》，于是这篇便是推完后的感想，因为是第一次写作品的长评，可能有许多写得不够好的地方还请多多见谅。 观前提醒：有一定程度的剧透 茸雪 既反抗专制，又反抗自由；既反抗自由的专制，又反抗专制的自由 茸雪这部作品作为三部曲的第一部 我说了余香算第 0 部，十分明了的主题一下子便让人知道作者炒饭希望在这三部曲里给大家带来的是什么。 何为自由在游玩的过程中，中心永远都是同一个问题：“被人为控制的恋爱是否自由？又是否正确？”或许看到这里的你马上就会提出反驳：“既然是人为控制的，那又谈何自由？” 但如果自身并没有得知被控制了呢？遇见一个人，然后爱上对方，对方也爱上了你，你们一起生活，每天的点点滴滴都是和睦而又融洽，一切都是那么的自然，这不正是大多数人所希望的理想恋爱吗？ 本作的男主与小茸便是如此，在教授的控制下，二人都十分自然的爱上了对方，无论什么事都非常合拍仿佛天生一对。但男主得知自己与小茸是在教授的控制下爱上的对方后便陷入了深深的怀疑：“互相的爱是否真实？自己是否是自由地爱上小茸？” 何为自由？在剧情中教授的话里，便有如此提到：“世界上没有自由的人。从你出生的那一刻开始，身边的环境就决定了你发展的方向。”而这也是本作品的中心点之一：不存在绝对的自由。 反抗即自由该作有三个结局，前两个结局中男主放弃了反抗，然后与小茸继续过上了幸福的生活，第三个结局中男主对这一切发起了反抗，但最终也没有改变与小茸仍然相互喜欢，并继续生活在一起的结局。但在最后，教授问了男主：“你是自由的喜欢上小茸的吗？”男主给出了肯定的回答。而这一切的原因正是自己意识到了自己并不自由，当人发现自己不自由，就是自由的开端，因为知道了不自由，所以有了反抗的能力，你不一定自由，但你可以反抗，人之所以为人，不是因为自由，而是因为反抗。反抗即自由。 对现实情况的考虑游玩这部作品时，也许会有玩家对于这项技术从嗤之以鼻到觉得梦幻而美好的转变，但在番外篇《雪》中，这种想法得到了作者的否认。 以下是个人对《雪》的理解：当美好的恋爱能够被控制，那么这种本就有大量需求的事物就可能会变成商品，因为有供求就会有市场，而在市场中能力最大的往往是资本，因此便会出现资本控制商品的情况，便会引起《雪》中发生的悲剧。 梦末 世界末日，一切从简 首先不得不承认我对梦末的理解是比另外两部都要浅的，虽说昙花的表现是三部曲中最为抽象的，但同时也有很明确的主题，但谈这部梦末我就全靠我的一点个人见解了。 惯性末日随时可能到来，所有人都知道再做什么已经没有了意义，并且需要依靠药物才能维持生命，那么继续活着的人是因为有动力吗？并不是，一切都已经没有意义，继续活着的人仅仅是因为一种惯性而继续活着，正因如此男主角毕升才会在已经没有考试的世界里继续维持着做卷子的习惯。 爱恋药物使人活下去的同时也夺走了人们的情感、欲望，变成性无能，但是唐乐吟却来到了毕升身边，并要求与其交往。这里我个人的想法是这样的：唐乐吟曾经也喜欢男主，但在药物作用下逐渐对男主没有了感觉，出于爱的惯性而并非真正的爱，不甘因药物而失去感情，从而故意调戏与男主互动，希望能在双方的交流中找回自己的情感。但对于男主而言，早已没有了感情与欲望，在一日日的交流中，两人开始逐渐努力，尝试着让自己真正的爱上对方，即使想跨出那一步，也无能为力 说白了就是男主没感情没欲望现在是个性无能阳痿。 末日背景下的极致浪漫“世界末日，一切从简。” 这是贯穿始末的一句话，因为复杂的事物、情感，都只会加速药物的消耗，这是一个从最开始就告诉了读者这是个悲剧的故事。但在这样的大环境下，唐乐吟依旧选择了最不节能的做法，拉着男主去体验一些情侣日常般的浪漫，如梦一般。既然是梦，那么就一定会有结束的时候，唐乐吟的药物先一步耗尽，她选择了独自离开，不愿让男主见证她的死去。察觉到的男主不顾一切的飞奔寻找唐乐吟，此时的二人的感情又究竟是爱，还是这些日子所带来的惯性呢？在这场浪漫之梦结束后，男主依旧维持着惯性，日复一日做着卷子，但此时他的心中一定也有那个阻挠他做卷子的唐乐吟吧。 在死亡随时会到来的日子里，我一个在呆在只剩我一人的城市里，做着一张名为 “唐乐吟” 的卷子 昙花 一所学校，一个女孩一束昙花，一叠明信片一段温馨却又模糊的记忆 还有……一个不需要后悔的世界 人的灵魂本作的一个核心问题：“如果可以，你是否会选择舍弃自己的部分记忆” 作者炒饭在该作中给出了自己的一个观点：记忆构成人的灵魂。那么舍弃记忆就是舍弃自己的灵魂。调查显示能选择性忘掉琐事的人的生活更加幸福，无事一身轻，而男主则是实践的第一人，他选择忘掉了自己曾经努力而最后发现是无用功的过去，但在临终前却试图找回这一切…… 总结本作的叙述手段相比前两作而言更为抽象，正如一百个人眼中有一百个哈姆雷特，不同人眼中也有不同的昙花，所以昙花的部分我更多的还是留出想象的空间吧，既是为了不让他人先入为主，也是为了不让自己的思维因此固定。看到许多人的总结中评价道这几部短篇作品有浓厚的哲学中存在主义的色彩，虽然不太了解哲学，但我也稍微结合自己的感受谈谈自己的看法吧。 存在主义：即 ”存在先于本质“，一切的一切一开始并没有本质，人也一样，而是在你出生、存在于这个世界上后由你自己决定你的本质是一个什么样的人，体现在《茸雪》中，例如教授对于爱情的理解，在她看来爱情的本质是社会化的结果，也因此可以市场化、统一管理。当你真正游玩这部作品后或许也会觉得在将例如《雪》篇中的一些缺点解决掉以后之后教授的话也相当有道理；体现在《梦末》中，男主在面对末日也仅仅只是日复一日的做着卷子，他不需要别人给他定下的规则；体现在《昙花》中，面对记忆&#x2F;灵魂的商品化，选择出售的人获得了金钱与轻松，选择保留的人获得了所谓 完整的灵魂 ，但他们都没有谁对谁错，仅仅只是对于事物的本质有着不同的理解。 存在主义的另一个核心词汇便是 “荒诞” 因为并不存在所谓的本质，只是由自己所决定，一切的终点都是虚无或是死去，没有明确的目的与胜利，只是你做出的选择。正因如此炒饭的作品才显得如此引人思考，他没有给出他所认为的正确答案，而只是抛出了问题，至于问题的答案，每个人心中会做出自己的选择。 最后，放出《茸雪》中的一个小片段。","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.windowbr.top/categories/%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"Galgame","slug":"Galgame","permalink":"http://blog.windowbr.top/tags/Galgame/"}]},{"title":"使用 CentOS 搭建 Minecraft 服务器（已失败）","slug":"MinecraftSever","date":"2022-11-18T12:47:08.000Z","updated":"2023-07-13T16:59:57.009Z","comments":true,"path":"2022/11/18/MinecraftSever/","link":"","permalink":"http://blog.windowbr.top/2022/11/18/MinecraftSever/","excerpt":"","text":"为什么失败了还要把博客发出来：虽然由于服务器性能过低导致失败，但本文依旧有大量可供参考的内容，我边搭服务器边写的博客，在我失败的时候已经写了这么多了我不舍得直接丢掉背景本着学习新知识的想法，本人通过教育认证的方式白嫖到了 Azure 的一台 Linux 服务器，并安装了 CentOS，但由于本人并不懂 Linux 的相关操作，因此服务器至今吃灰（ 因此，由于本人一直是 Minecraft 忠实玩家，但又从来没有过使用 Linux 搭建服务端进行游戏的尝试（之前仅有尝试过使用 Windows server 搭建的经验），于是决定利用这台服务器进行 Minecraft 游戏服务器的搭建。 上文已说到，本人并不熟悉 Linux 的相关操作，因此本文的操作大多数基于 新兵Sinbing 的视频 Linux系统MC服务器开服教程 进行操作。 正式开始Linux 端相关软件安装首先要进行的便是相关环境的安装，包括 JAVA 11, screen, zip&amp;unzip, wget wget: 从 url 下载文件 1$ yum install -y wget JAVA 17 新兵Sinbing 使用的为 Java 8，可使用 yum 进行更简便的安装，但高版本的 Minecraft 需要更高版本的 Java，因此本文将讲述 Java 17 的安装方法 依次执行以下指令（如果找不到目录请将第二行代码的目录名改为你的实际目录名） 12$ wget https://download.oracle.com/java/17/latest/jdk-17_linux-x64_bin.tar.gz$ mv jdk-17.0.5/ /usr/lib/jvm 配置 Java 环境变量网上的教程多为让你使用 vi （Linux 自带的文本编辑器）进行文件修改，但这对小白来说过于麻烦，所以我的解决方案是直接使用 Xftp 搭配本地编辑器进行修改。 首先使用 Xftp 进入 &#x2F;etc 目录下找到 profile 文件，直接右键打开，在最后加入以下代码： 123export JAVA_HOME=/usr/lib/jvm/jdk-17.0.5export CLASSPATH=$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATHexport PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH 如图所示 然后直接保存退出即可（没有 VS code 的可以用记事本代替） 返回 Xshell 刷新环境变量并验证是否安装完成 12$ source /etc/profile$ java -version 若安装正确则出现类似这样的提示 1234[root@ALinux ~]# java -versionjava version &quot;17.0.5&quot; 2022-10-18 LTSJava(TM) SE Runtime Environment (build 17.0.5+9-LTS-191)Java HotSpot(TM) 64-Bit Server VM (build 17.0.5+9-LTS-191, mixed mode, sharing) screen: 多任务后台运行 1$ yum install -y screen zip&amp;unzip: 压缩&amp;解压zip 12$ yum install -y zip$ yum install -y unzip 服务端下载与初始化本文仅介绍原版服务端，其他服务端自己查阅相关资料 为操作方便，本人选择在个人电脑上（Windows）进行下载及初始化 服务端的下载方式 1：官网下载最新版服务端 下载 MINECRAFT ：JAVA 版的服务器 方式 2：官方启动器下载 在 配置 页面点击 新配置，便能看到服务端的下载按钮 服务端初始化相信所有 Minecraft 玩家的电脑都已配置好 Java 环境，因此本文不再赘述。 首先新建一个文件夹作为服务器文件夹，将下载好的服务端 jar 文件拖入，Windows 端可直接双击运行，然后等待文件加载后，可以看见名为 eula.txt 的文件，此文件为相关协议，因此需要手动同意协议方可开服，将该文件内的 eula=false 更改为 eula=true 后保存即可。 再次双击 server 初次运行服务器，等待世界生成等初始化完成后，如图看见控制台出现 Done 字样即为初始化完毕 此时控制台输入 stop 即可关闭服务器 将服务端上传至云服务器新兵Sinbing 使用的软件为 bitvise SSH 但由于本人更加习惯 Xshell 与 Xftp，因此采用Xshell 进行演示。 首先自行下载软件并连接上自己的云服务器。 将上一步初始化完成的服务端整个文件夹打包为 zip 格式（这就不用我教了吧） 使用 Xftp 直接将文件拖入上传至服务器，推荐上传目录为 /home/&lt;你的用户名&gt; 下。 不懂什么叫 目录 的小白可以认为和 Windows 下的 文件夹 差不多 在 Xshell 中使用 cd 命令移动到服务器压缩包目录下后，使用 unzip 命令进行解压缩操作（ &lt;server.zip&gt; 的内容替换为自己压缩包的文件名） 1$ unzip &lt;server.zip&gt; 解压完成后确保自己正处在服务器文件夹下，运行以下命令启动服务器 1$ java -Xmx4096M -Xms1024M -jar &lt;server.jar&gt; nogui Xmx 为最大内存，Xms 为最小内存，根据自己的服务器配置进行调整 &lt;server.jar&gt; 替换为自己的服务器 jar 文件 悲伤的故事然后本人的搭服务器计划停留在了这一步，因为服务器性能太低，进程直接被 killed 了，总之就是非常难受 本文完 相关链接Java 17 安装教程: Centos 7 安装 java 17 新兵Sinbing 的视频教程: Linux系统MC服务器开服教程 | 基础开服、自动备份、MCDR、统统都有","categories":[{"name":"技术","slug":"技术","permalink":"http://blog.windowbr.top/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Minecraft","slug":"Minecraft","permalink":"http://blog.windowbr.top/tags/Minecraft/"},{"name":"Linux","slug":"Linux","permalink":"http://blog.windowbr.top/tags/Linux/"}]},{"title":"建站有感","slug":"BuildBlog","date":"2022-10-10T13:20:34.000Z","updated":"2024-05-31T11:31:15.298Z","comments":true,"path":"2022/10/10/BuildBlog/","link":"","permalink":"http://blog.windowbr.top/2022/10/10/BuildBlog/","excerpt":"","text":"为什么建站说来也巧，早期就有搭建自我博客的想法，然后在建站前一天偶然刷到免费的网站托管平台（然后尝试后感觉还是GitHub pages舒服），当时前端知识为零的我就尝试了搭起了自己的第一个网站 （图为写该文时截的，所以加上了博客的超链接） 确实零基础，因为如何插入图片、超链接这些都是现场查的 当时就发现貌似现在的 GitHub Pages 不止限定一个仓库了，非常巧的第二天看到有大佬群友在交流博客，见他们提到了Hexo是一个不错的博客框架，于是下课后便开始尝试 中途遇见的困难那可真是，太太太太太太多了 下文充满许多能让您血压飙升的案例，其中不少是因为没有足够仔细阅读官方文档造成的，所以玩什么前请一定仔细阅读官方文档 与所查看的教程视频不同的情况非常不幸，我并不懂 Node.js 的知识，而安装 Hexo 就是靠它，教程视频中十分顺畅的在安装好 nodejs 后在 git bash 中使用 npm 进行了安装，而我进行相同操作时则是 12$ npm -vbash: npm: command not found 第一反应是挺懵逼的，因为我确确实实安装了 nodejs，并且在 PowerShall 中能够使用。然后就是许许多多的网络查找，最终发现问题出在环境变量上，而所学习的 Hexo 搭建教程中并没有提到配置环境变量，因此造成了问题。配置好环境变量后，成功在 git bash 中正常使用npm。 Hexo 部署错误使用 hexo d 部署时，多次出现 err: Error: Spawn failed 错误，目前猜测大约是网络不稳定的问题（是的我还是不确定问题出在哪），但当时初搭建测试时经常需要部署，于是这是个大问题。又是一通网络搜索，到最后发现Hexo官方文档中就有比较好的解决方案： Hexo 生成的所有文件都放在 public 文件夹中，您可以将它们复制到您喜欢的地方。 看到官方文档如此写到，突然出现个好点子，我直接将public文件夹内的文件用 GitHub Desktop 上传到仓库不就行了吗，结果是这个方法想当的成功，虽然大部分时候 hexo d 都能正常运行，但偶尔出现不行的时候我就会使用这个方法。 CSS渲染错误下载安装、修改配置文件、本地服务器运行测试、部署，打开发现情况正常，于是去自定义了域名，满怀期待的去浏览器输入了我的博客地址，结果出现了让我想不到的景象：怎么我这博客只有字还是乱七八糟的呢？ 又是一通搜索，发现网络上大多数说法都是去更改 _config.yml 文件中的 root 值，而我打开我的配置文件后发现并没有这个预设，发现看到的文章没有时间非常接近的，考虑到可能是版本差异，我再次点进了官方文档，发现问题还是出在了非常简单的地方：我自定义了 GitHub Pages 的域名后没有在 Hexo 配置文件中进行相应的域名更改。果不其然更改后又恢复了正常的样子。 主题配置Hexo 默认主题真是太丑啦，然后去找了找好看的主题，最后发现了 Nexmoe 这个非常二刺猿的好看主题，由于没有相应视频教程，开始自行查询文档进行使用。 中途出现的问题都是些小问题就不细说了，但杂七杂八非常多，大多数是因为自己对这类配置文件、相关操作调整之类的自我原因造成的，所以导致了对主题的配置还花了相当长的时间，但最终还是成功装上了，确定达到自己想要的效果后便开始着手编写第一篇博客，于是就有了这一篇文章。 相关链接Hexo 搭建视频教程：【2021最新版】保姆级Hexo+github搭建个人博客 Hexo 官方文档：文档 | Hexo Nexmoe 项目地址：Nexmoe: 🔥 一个比较特别的 Hexo 主题","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.windowbr.top/categories/%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"学习","slug":"学习","permalink":"http://blog.windowbr.top/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"Blog","slug":"Blog","permalink":"http://blog.windowbr.top/tags/Blog/"}]}],"categories":[{"name":"技术","slug":"技术","permalink":"http://blog.windowbr.top/categories/%E6%8A%80%E6%9C%AF/"},{"name":"杂谈","slug":"杂谈","permalink":"http://blog.windowbr.top/categories/%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"Blog","slug":"Blog","permalink":"http://blog.windowbr.top/tags/Blog/"},{"name":"Galgame","slug":"Galgame","permalink":"http://blog.windowbr.top/tags/Galgame/"},{"name":"Minecraft","slug":"Minecraft","permalink":"http://blog.windowbr.top/tags/Minecraft/"},{"name":"Linux","slug":"Linux","permalink":"http://blog.windowbr.top/tags/Linux/"},{"name":"学习","slug":"学习","permalink":"http://blog.windowbr.top/tags/%E5%AD%A6%E4%B9%A0/"}]}