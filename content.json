{"meta":{"title":"windowBR的博客","subtitle":"","description":"","author":"windowBR","url":"http://blog.windowbr.top","root":"/"},"pages":[{"title":"友链","date":"2022-10-10T12:17:19.048Z","updated":"2022-10-10T12:17:19.048Z","comments":true,"path":"PY.html","permalink":"http://blog.windowbr.top/PY.html","excerpt":"","text":"非常遗憾的是 这页还是空空如也 欢迎小伙伴交换友链"},{"title":"关于","date":"2022-10-10T12:17:43.000Z","updated":"2022-10-12T05:06:47.472Z","comments":true,"path":"about.html","permalink":"http://blog.windowbr.top/about.html","excerpt":"","text":"关于我这个人很懒，什么都还没写 关于本站 2022 10-10 将 Hexo 与 Nexmoe 初步配置完毕，博客初步搭建完成 10-09 为博客安装 Nexmoe 主题 10-08 使用 Hexo 开始搭建博客，使用腾讯云 COS 作为图床"},{"title":"谢谢打钱","date":"2022-10-10T12:18:22.000Z","updated":"2022-10-10T12:18:46.349Z","comments":true,"path":"donate.html","permalink":"http://blog.windowbr.top/donate.html","excerpt":"","text":""},{"title":"文章归档","date":"2022-10-10T11:45:49.583Z","updated":"2022-10-10T11:35:38.734Z","comments":true,"path":"archive.html","permalink":"http://blog.windowbr.top/archive.html","excerpt":"","text":""}],"posts":[{"title":"使用 CentOS 搭建 Minecraft 服务器（已失败）","slug":"MinecraftSever","date":"2022-11-18T12:47:08.000Z","updated":"2022-11-18T14:47:54.299Z","comments":true,"path":"2022/11/18/MinecraftSever/","link":"","permalink":"http://blog.windowbr.top/2022/11/18/MinecraftSever/","excerpt":"","text":"为什么失败了还要把博客发出来：虽然由于服务器性能过低导致失败，但本文依旧有大量可供参考的内容，我边搭服务器边写的博客，在我失败的时候已经写了这么多了我不舍得直接丢掉背景本着学习新知识的想法，本人通过教育认证的方式白嫖到了 Azure 的一台 Linux 服务器，并安装了 CentOS，但由于本人并不懂 Linux 的相关操作，因此服务器至今吃灰（ 因此，由于本人一直是 Minecraft 忠实玩家，但又从来没有过使用 Linux 搭建服务端进行游戏的尝试（之前仅有尝试过使用 Windows server 搭建的经验），于是决定利用这台服务器进行 Minecraft 游戏服务器的搭建。 上文已说到，本人并不熟悉 Linux 的相关操作，因此本文的操作大多数基于 新兵Sinbing 的视频 Linux系统MC服务器开服教程 进行操作。 正式开始Linux 端相关软件安装首先要进行的便是相关环境的安装，包括 JAVA 11, screen, zip&amp;unzip, wget JAVA 17 新兵Sinbing 使用的为 Java 8，可使用 yum 进行更简便的安装，但高版本的 Minecraft 需要更高版本的 Java，因此本文将讲述 Java 17 的安装方法 依次执行以下指令（如果找不到目录请将第二行代码的目录名改为你的实际目录名） 12$ wget https://download.oracle.com/java/17/latest/jdk-17_linux-x64_bin.tar.gz$ mv jdk-17.0.5/ /usr/lib/jvm 配置 Java 环境变量网上的教程多为让你使用 vi （Linux 自带的文本编辑器）进行文件修改，但这对小白来说过于麻烦，所以我的解决方案是直接使用 Xftp 搭配本地编辑器进行修改。 首先使用 Xftp 进入 &#x2F;etc 目录下找到 profile 文件，直接右键打开，在最后加入以下代码： 123export JAVA_HOME=/usr/lib/jvm/jdk-17.0.5export CLASSPATH=$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATHexport PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH 如图所示 然后直接保存退出即可（没有 VS code 的可以用记事本代替） 返回 Xshell 刷新环境变量并验证是否安装完成 12$ source /etc/profile$ java -version 若安装正确则出现类似这样的提示 1234[root@ALinux ~]# java -versionjava version &quot;17.0.5&quot; 2022-10-18 LTSJava(TM) SE Runtime Environment (build 17.0.5+9-LTS-191)Java HotSpot(TM) 64-Bit Server VM (build 17.0.5+9-LTS-191, mixed mode, sharing) screen: 多任务后台运行 1$ yum install -y screen zip&amp;unzip: 压缩&amp;解压zip 12$ yum install -y zip$ yum install -y unzip wget: 从 url 下载文件 1$ yum install -y wget 服务端下载与初始化本文仅介绍原版服务端，其他服务端自己查阅相关资料 为操作方便，本人选择在个人电脑上（Windows）进行下载及初始化 服务端的下载方式 1：官网下载最新版服务端 下载 MINECRAFT ：JAVA 版的服务器 方式 2：官方启动器下载 在 配置 页面点击 新配置，便能看到服务端的下载按钮 服务端初始化相信所有 Minecraft 玩家的电脑都已配置好 Java 环境，因此本文不再赘述。 首先新建一个文件夹作为服务器文件夹，将下载好的服务端 jar 文件拖入，Windows 端可直接双击运行，然后等待文件加载后，可以看见名为 eula.txt 的文件，此文件为相关协议，因此需要手动同意协议方可开服，将该文件内的 eula=false 更改为 eula=true 后保存即可。 再次双击 server 初次运行服务器，等待世界生成等初始化完成后，如图看见控制台出现 Done 字样即为初始化完毕 此时控制台输入 stop 即可关闭服务器 将服务端上传至云服务器新兵Sinbing 使用的软件为 bitvise SSH 但由于本人更加习惯 Xshell 与 Xftp，因此采用Xshell 进行演示。 首先自行下载软件并连接上自己的云服务器。 将上一步初始化完成的服务端整个文件夹打包为 zip 格式（这就不用我教了吧） 使用 Xftp 直接将文件拖入上传至服务器，推荐上传目录为 /home/&lt;你的用户名&gt; 下。 不懂什么叫 目录 的小白可以认为和 Windows 下的 文件夹 差不多 在 Xshell 中使用 cd 命令移动到服务器压缩包目录下后，使用 unzip 命令进行解压缩操作（ &lt;server.zip&gt; 的内容替换为自己压缩包的文件名） 1$ unzip &lt;server.zip&gt; 解压完成后确保自己正处在服务器文件夹下，运行以下命令启动服务器 1$ java -Xmx4096M -Xms1024M -jar &lt;server.jar&gt; nogui Xmx 为最大内存，Xms 为最小内存，根据自己的服务器配置进行调整 &lt;server.jar&gt; 替换为自己的服务器 jar 文件 悲伤的故事然后本人的搭服务器计划停留在了这一步，因为服务器性能太低，进程直接被 killed 了，总之就是非常难受 本文完","categories":[],"tags":[{"name":"Minecraft","slug":"Minecraft","permalink":"http://blog.windowbr.top/tags/Minecraft/"},{"name":"Linux","slug":"Linux","permalink":"http://blog.windowbr.top/tags/Linux/"}]},{"title":"个人主页更新 0.2 版本！","slug":"WebUpdate0-2","date":"2022-11-12T16:15:28.000Z","updated":"2022-11-12T16:29:15.114Z","comments":true,"path":"2022/11/13/WebUpdate0-2/","link":"","permalink":"http://blog.windowbr.top/2022/11/13/WebUpdate0-2/","excerpt":"","text":"个人主页有更新咯经过这段时间的学习，个人主页获得了一次更新，将版本号定为 0.2，而上一版为 0.1 至于最初的雏形就当是 0.0.1 ~ 0.0.9 吧 更新内容如下 将原头图改为背景图 博客按钮样式更改 部分文本修改 正文增加了白色半透明背景 以下是新旧网页对比 0.1 版本 0.2 版本","categories":[],"tags":[{"name":"学习","slug":"学习","permalink":"http://blog.windowbr.top/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"前端","slug":"前端","permalink":"http://blog.windowbr.top/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"建站有感","slug":"BuildBlog","date":"2022-10-10T13:20:34.000Z","updated":"2022-10-10T13:56:28.848Z","comments":true,"path":"2022/10/10/BuildBlog/","link":"","permalink":"http://blog.windowbr.top/2022/10/10/BuildBlog/","excerpt":"","text":"为什么建站说来也巧，早期就有搭建自我博客的想法，然后在建站前一天偶然刷到免费的网站托管平台（然后尝试后感觉还是GitHub pages舒服），当时前端知识为零的我就尝试了搭起了自己的第一个网站 （图为写该文时截的，所以加上了博客的超链接） 确实零基础，因为如何插入图片、超链接这些都是现场查的 当时就发现貌似现在的 GitHub Pages 不止限定一个仓库了，非常巧的第二天看到有大佬群友在交流博客，见他们提到了Hexo是一个不错的博客框架，于是下课后便开始尝试 中途遇见的困难那可真是，太太太太太太多了 下文充满许多能让您血压飙升的案例，其中不少是因为没有足够仔细阅读官方文档造成的，所以玩什么前请一定仔细阅读官方文档 与所查看的教程视频不同的情况非常不幸，我并不懂 Node.js 的知识，而安装 Hexo 就是靠它，教程视频中十分顺畅的在安装好 nodejs 后在 git bash 中使用 npm 进行了安装，而我进行相同操作时则是 12$ npm -vbash: npm: command not found 第一反应是挺懵逼的，因为我确确实实安装了 nodejs，并且在 PowerShall 中能够使用。然后就是许许多多的网络查找，最终发现问题出在环境变量上，而所学习的 Hexo 搭建教程中并没有提到配置环境变量，因此造成了问题。配置好环境变量后，成功在 git bash 中正常使用npm。 Hexo 部署错误使用 hexo d 部署时，多次出现 err: Error: Spawn failed 错误，目前猜测大约是网络不稳定的问题（是的我还是不确定问题出在哪），但当时初搭建测试时经常需要部署，于是这是个大问题。又是一通网络搜索，到最后发现Hexo官方文档中就有比较好的解决方案： Hexo 生成的所有文件都放在 public 文件夹中，您可以将它们复制到您喜欢的地方。 看到官方文档如此写到，突然出现个好点子，我直接将public文件夹内的文件用 GitHub Desktop 上传到仓库不就行了吗，结果是这个方法想当的成功，虽然大部分时候 hexo d 都能正常运行，但偶尔出现不行的时候我就会使用这个方法。 CSS渲染错误下载安装、修改配置文件、本地服务器运行测试、部署，打开发现情况正常，于是去自定义了域名，满怀期待的去浏览器输入了我的博客地址，结果出现了让我想不到的景象：怎么我这博客只有字还是乱七八糟的呢？ 又是一通搜索，发现网络上大多数说法都是去更改 _config.yml 文件中的 root 值，而我打开我的配置文件后发现并没有这个预设，发现看到的文章没有时间非常接近的，考虑到可能是版本差异，我再次点进了官方文档，发现问题还是出在了非常简单的地方：我自定义了 GitHub Pages 的域名后没有在 Hexo 配置文件中进行相应的域名更改。果不其然更改后又恢复了正常的样子。 主题配置Hexo 默认主题真是太丑啦，然后去找了找好看的主题，最后发现了 Nexmoe 这个非常二刺猿的好看主题，由于没有相应视频教程，开始自行查询文档进行使用。 中途出现的问题都是些小问题就不细说了，但杂七杂八非常多，大多数是因为自己对这类配置文件、相关操作调整之类的自我原因造成的，所以导致了对主题的配置还花了相当长的时间，但最终还是成功装上了，确定达到自己想要的效果后便开始着手编写第一篇博客，于是就有了这一篇文章。 相关链接Hexo 搭建视频教程：【2021最新版】保姆级Hexo+github搭建个人博客 Hexo 官方文档：文档 | Hexo Nexmoe 项目地址：Nexmoe: 🔥 一个比较特别的 Hexo 主题","categories":[],"tags":[{"name":"学习","slug":"学习","permalink":"http://blog.windowbr.top/tags/%E5%AD%A6%E4%B9%A0/"}]},{"title":"测试","slug":"test","date":"2022-10-10T05:17:06.000Z","updated":"2022-10-12T05:08:03.468Z","comments":true,"path":"2022/10/10/test/","link":"","permalink":"http://blog.windowbr.top/2022/10/10/test/","excerpt":"","text":"本文仅用于测试博客 [TOC] 一级标题二级标题三级标题四级标题五级标题六级标题 表格显示 1cout &lt;&lt; &quot;HelloWorld&quot; &lt;&lt; endl; //代码块展示 引用一级 引用二级 有序列表一 有序列表二 有序列表三 无序列表一 无序列表二 无序列表三 任务列表一 任务列表二 任务列表三 [链接引用]: http://blog.windowbr.top “链接引用测试” 分割线↑ 加粗 斜体 加粗斜体 下划线 //代码 超链接 这里有注释","categories":[],"tags":[{"name":"test","slug":"test","permalink":"http://blog.windowbr.top/tags/test/"}]},{"title":"Hello World","slug":"hello-world","date":"2022-10-08T12:30:12.146Z","updated":"2022-10-08T12:30:12.146Z","comments":true,"path":"2022/10/08/hello-world/","link":"","permalink":"http://blog.windowbr.top/2022/10/08/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"Minecraft","slug":"Minecraft","permalink":"http://blog.windowbr.top/tags/Minecraft/"},{"name":"Linux","slug":"Linux","permalink":"http://blog.windowbr.top/tags/Linux/"},{"name":"学习","slug":"学习","permalink":"http://blog.windowbr.top/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"前端","slug":"前端","permalink":"http://blog.windowbr.top/tags/%E5%89%8D%E7%AB%AF/"},{"name":"test","slug":"test","permalink":"http://blog.windowbr.top/tags/test/"}]}